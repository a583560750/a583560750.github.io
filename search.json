[{"title":"群晖设置docker里的ddsm自启动","url":"/2019/08/15/群晖设置docker里的ddsm自启动/","content":"1、root用户ssh登录群晖\n\n2、docker ps命令，查看容器id\n\n3、使用命令：docker update --restart=always 容器id即可","tags":["自启","DSM","群晖","DDSM"]},{"title":"蜗牛星际B双安装群晖识别ntfs硬盘","url":"/2019/07/29/蜗牛星际B双安装群晖识别ntfs硬盘/","content":"群晖版本为：DS3617xs-DSM 6.1.7-15284\n1、用root用户SSH登录备份/etc.defaults/synoinfo.conf文件再做修改\n<div class=\"cnblogs_code\">\n<pre>cp /etc.defaults/synoinfo.conf /etc.defaults/synoinfo.conf.bak\nvi /etc.defaults/synoinfo.conf</pre>\n</div>\n修改esataportcfg与internalportcfg后的16进制值\n默认应为esataportcfg=\"0xff000\"与internalportcfg=\"0xfff\"\n\n<img src=\"https://raw.githubusercontent.com/im201907/annex/master/20190729094248.jpg\" />\n根据下表对应修改指定esata与sata接口数目\n\n<img class=\"\" src=\"https://raw.githubusercontent.com/im201907/annex/master/20190729094219.png\" width=\"560\" height=\"369\" />\n\n以下做参考：\n\n<img class=\"\" src=\"https://raw.githubusercontent.com/im201907/annex/master/20190729094323.png\" width=\"757\" height=\"314\" />","tags":["DSM","群晖","nfts","蜗牛星际"]},{"title":"群晖DSM6.x系统完美修改root账号密码","url":"/2019/07/26/群晖DSM6.x系统完美修改root账号密码/","content":"1、SSH连接群晖，admin登录后，切换root\n\n```\nsudo su -\n```\n\n2、提示输入密码时，输入admin密码后回车，然后修改root密码\n\n```\nsynouser --setpw root xxx\n```\n\n其中xxx则为需修改的root密码","tags":["DSM","群晖","密码","root"]},{"title":"群晖运行中修改MAC地址与SN","url":"/2019/07/26/群晖运行中修改MAC地址与SN/","content":"1、把引导盘挂载到自定义目录中\n\n```\nmkdir -p /tmp/boot\ncd /dev\n```\n\nmount -t vfat synoboot1 /tmp/boot/\n2、直接修改引导文件中的MAC与SN\n\n```\ncd /tmp/boot/\nvi grub/grub.cfg\n```\n\n3、修改以下内容\n<span style=\"color: #ff0000;\"><strong>set vid=0x2xxx</strong></span>\n<span style=\"color: #ff0000;\"><strong>set pid=0xExxx</strong></span>\n<span style=\"color: #ff0000;\"><strong>set sn=DOxxxxxxxxxx</strong></span>\n<span style=\"color: #ff0000;\"><strong>set mac1=00113xxxxxxx</strong></span>","tags":["DSM","群晖","MAC","SN"]},{"title":"CentOs7 安装最新版的Git","url":"/2019/07/25/CentOs7 安装最新版的Git/","content":"一、yum命令安装，此方法简单，并且会自动安装依赖的包，真是傻瓜式安装，而且会从源里安装最新的版本，不过不一定是git最新的。\n\n```\nyum install git\n```\n\n二、源码安装，这个就比较麻烦点，不过过程还是比较清晰的，毕竟源码安装也比较普遍了\n\n1、安装前要手动安装下依赖包，可以直接是用yum安装\n```\nyum install -y wget\nyum install gcc\nyum install gcc-c++\nyum install -y zlib-devel\nyum install -y perl-ExtUtils-MakeMaker package\n```\n2、下载最新版本的git源码包，当然是要去官网下载了。我现在的最新版本是 git-2.18.0\n\n\n```\nwget https://mirrors.edge.kernel.org/pub/software/scm/git/git-2.18.0.tar.gz\n```\n\n\n3、接下来就是解压，配置，安装了，也不复杂\n```\ntar -zxvf git-2.18.0.tar.gz\ncd git-2.18.0\n./configure --prefix=/usr/local/git\nmake\nmake install\n```\n4、没有报错的话，那就要恭喜了，你已经完成了大部分了。如果出错一般是依赖包缺失，安装下就好，如果是其他的问题，请Google或其他搜索引擎吧。然后就是设置下环境变量PATH了，可以随处是用git。\n\n\n```\necho \"export PATH=:/usr/local/git/bin\"&gt;&gt;/etc/bashrc\nsource /etc/bashrc\ngit --version\n```\n\n\n5、一般这个时候是会出来你安装的版本的，不过我一开始安装依赖包的时候弄多了，把git安装了，系统默认给装的事1.8.3.1的，你可以卸载了它。然后重新生效下环境变量就可以了。\n\n\n```\nsudo yum remove git\nsource /etc/bashrc\ngit --version\n```\n\n\n到此安装完成了\n\n**异常问题**：git fatal: Unable to find remote helper for 'https'，解决：\n\n安装后，进到git目录，重新编译\n\n\n```\nyum install curl-devel\ncd git-2.18.0\n./configure --prefix=/usr/local/git\nmake\nmake install\n\n```\n\n","tags":["centos","git"]},{"title":"CentOS7安装golang1.6环境","url":"/2019/07/25/CentOS7安装golang1.6环境/","content":"1，下载二进制文件：\n\n\n```\nwget https://studygolang.com/dl/golang/go1.6.linux-amd64.tar.gz\n```\n\n\n2，解压并创建工作目录：\n\n\n```\nmkdir /usr/local/golang\ntar -zxf go1.6.linux-amd64.tar.gz -C /usr/local/golang\n```\n\n\n3，设置环境变量：\n\n```\nexport GOROOT=/usr/local/golang/go\nexport GOBIN=/bin\nexport GOPKG=/pkg/tool/linux_amd64 \nexport GOARCH=amd64\nexport GOOS=linux\nexport GOPATH=/golang\nexport PATH=:::/bin\n```\n\n\n4，重载配置 source /etc/profile 使之生效，或者重新登录Linux也行\n\n\n```\ngo version\n```\n输出以下结果即可：\ngo version go1.6 linux/amd64\n\n环境配置成功","tags":["centos","golang","go"]},{"title":"VMware安装黑群晖教程","url":"/2019/07/24/VMware安装黑群晖教程/","content":"下面开始准备安装DSM的步骤，1.02b是一个神奇的引导，该引导可以随意升级到最新版本的DSM都不会出问题，所以本次使用这个引导。\n\n1、制作虚拟硬盘VHD\n\n打开cmd命令窗口，然后输入下面的命令，创建虚拟磁盘\n\n```\ndiskpart\n```\n\n在新开的DOS窗口输入以下命令，每输入一行回车执行\n\n```\ncreate vdisk file=D:\\synoboot.vhd maximum=256 type=expandable\nattach vdisk\ncreate partition primary\nexit\n```\n\n\n<img class=\"\" src=\"https://raw.githubusercontent.com/im201907/annex/master/20190724114229.png\" width=\"637\" height=\"333\" />\n\n此时在磁盘管理中已经成功创建并挂载虚拟磁盘\n\n<img class=\"\" src=\"https://raw.githubusercontent.com/im201907/annex/master/20190724114312.png\" width=\"615\" height=\"442\" />\n\n2、使用工具 Roadkil's DiskImage 将引导文件写入到虚拟磁盘中，选择刚才创建的256MB的虚拟磁盘，然后选择引导的img映像，点击开始写入\n\n<img src=\"https://raw.githubusercontent.com/im201907/annex/master/20190724114432.png\" />\n\n<img src=\"https://raw.githubusercontent.com/im201907/annex/master/20190724114504.png\" />\n\n3、 写入后打开磁盘管理器，\n\n找到这个255M大小的虚拟磁盘，一定不要格式化，然后右击选择离VHD\n\n<img src=\"https://raw.githubusercontent.com/im201907/annex/master/20190724114741.png\" />\n\n4、新建虚拟机\n\n&nbsp;\n\n<img src=\"https://raw.githubusercontent.com/im201907/annex/master/20190724114841.png\" />\n\n<img src=\"https://raw.githubusercontent.com/im201907/annex/master/20190724114901.png\" />\n\n<img src=\"https://raw.githubusercontent.com/im201907/annex/master/20190724114936.png\" />\n\n<img src=\"https://raw.githubusercontent.com/im201907/annex/master/20190724115024.png\" />\n\n<img src=\"https://raw.githubusercontent.com/im201907/annex/master/20190724115044.png\" />\n\n内存建议512M或以上\n\n<img src=\"https://raw.githubusercontent.com/im201907/annex/master/20190724115101.png\" />\n\n<img src=\"https://raw.githubusercontent.com/im201907/annex/master/20190724115146.png\" />\n\n<img src=\"https://raw.githubusercontent.com/im201907/annex/master/20190724115217.png\" />\n\n<img src=\"https://raw.githubusercontent.com/im201907/annex/master/20190724115232.png\" />\n\n<img src=\"https://raw.githubusercontent.com/im201907/annex/master/20190724115307.png\" />\n\n选择刚才的VHD虚拟磁盘\n\n<img src=\"https://raw.githubusercontent.com/im201907/annex/master/20190724115344.png\" />\n\n编辑虚拟机设置，新增一个虚拟硬盘用于存储数据\n\n<img class=\"\" src=\"https://raw.githubusercontent.com/im201907/annex/master/20190724115532.png\" width=\"535\" height=\"520\" />\n\n5、启动虚拟机，利用搜索Synology Assistant安装\n\n<img class=\"\" src=\"https://raw.githubusercontent.com/im201907/annex/master/20190724121007.png\" width=\"664\" height=\"374\" />\n\n<img src=\"https://raw.githubusercontent.com/im201907/annex/master/20190724121204.png\" />\n\n<img src=\"https://raw.githubusercontent.com/im201907/annex/master/20190724121306.png\" />\n\n手动安装\n\n<img class=\"\" src=\"https://raw.githubusercontent.com/im201907/annex/master/20190724121333.png\" width=\"612\" height=\"413\" />\n\n选择DSM_DS3617xs_15284.pat点击立即安装\n\n<img class=\"\" src=\"https://raw.githubusercontent.com/im201907/annex/master/20190724121407.png\" width=\"807\" height=\"599\" />\n\n<img src=\"https://raw.githubusercontent.com/im201907/annex/master/20190724121523.png\" />\n\n等待安装完成即可","tags":["DSM","群晖","虚拟机","vmware"]},{"title":"群晖第三方可用源(更新至7月22日)","url":"/2019/07/22/群晖第三方可用源/","content":"套件可用源（2019.7.22更新）：\n\nhttp://packages.synocommunity.com/\nhttp://spk.unzureichende.info/\nhttp://synology.sysco.ch/\nhttp://synology.acmenet.ru\nhttp://packages.synocommunity.com/?beta=1\nhttp://synology.sysco.ch\nhttps://www.cphub.net/\nhttp://jaspr.kastner.wtf/\nhttps://synology.cambier.org/\nhttp://www.pulse-station.com/repo/\nhttps://get.filebot.net/syno/\nhttps://packages.page81.net/\nhttp://spk.diablos-netzwerk.de/\nhttp://syno.dierkse.nl/\nhttp://www.hildinger.us/sspks/\nhttps://spk.netzbaer.de/\nhttp://synology.nzbusenet.com/\nhttp://olympe.letroye.be/sspks","tags":["可用源","DSM","群晖"]},{"title":"DSM6.1开机自动运行脚本或命令","url":"/2019/07/21/DSM6.1开机自动运行脚本或命令/","content":"修改/etc/rc文件，在倒数第二行（exit 0前面）添加脚本或命令即可","tags":["自启","DSM","群晖"]},{"title":"手动升级owncloud","url":"/2019/07/19/手动升级owncloud/","content":"1、把旧版本owncloud全部移动在一个目录中\n\n\n```\n[root@phicomm-n1:~]#cd /www/html/owncloud\n\n[root@phicomm-n1:/www/html/owncloud]#mkdir ../owncloud_old\n\n[root@phicomm-n1:/www/html/owncloud]#mv * ../owncloud_old\n```\n\n\n2、把新版本下载好解压在owncloud中，然后把旧版本owncloud的config.php，并给予777的权限\n\n\n```\n[root@phicomm-n1:/www/html/owncloud]#mv ../config/config/php config/\n\n[root@phicomm-n1:/www/html/owncloud]#chmod 777 /config/config/php\n```\n\n\n3、重启服务再打开owncloud地址访问即可升级\n","tags":["owncloud","私有云","升级"]},{"title":"owncloud疑难杂症集","url":"/2019/07/19/owncloud疑难杂症集/","content":"<span style=\"color: #ff0000;\"><strong>Your Data directory is invalid，请确保文件根目录下包含有一个名为“.ocdata”的文件</strong></span>\n\nowncloud搬迁数据或手动升级owncloud时，会出现Your Data directory is invalid，请确保文件根目录下包含有一个名为“.ocdata”的文件\n\n解决方案：\n\n在owncloud数据目录中新建一个.ocdata空文件重启服务即可，如果不知道目录位置，可以在/config/config.php中查看datadirectory指向的路径\n\n```\n[root@phicomm-n1:~]#cd /var/www/html/data/\n[root@phicomm-n1:~]#touch .ocdata\n\n```\n","tags":["owncloud"]},{"title":"N1在docker安装owncloud","url":"/2019/07/19/N1在docker安装owncloud/","content":"1、拉取owncloud镜像\n\n\n```\n[root@N1:~]# docker pull owncloud\n```\n\n\n2、建立容器运行\n\n\n```\n[root@N1:~]#docker run --name owncloud -d -p 83:80 --privileged -v /www/html:/var/www/html owncloud:latest\n```\n\n\n以上为创建一个名为owncloud的容器，把80端口转发到主机的83端口并启用特权模式，然后把容器中的/var/www/html目录映射到主机的/www/html中","tags":["N1","docker","owncloud","私有云"]},{"title":"Rclone使用笔记","url":"/2019/07/17/Rclone使用笔记/","content":"配置远程目录，按照提示配置即可\n\n\n```\n[root@phicomm-n1:~]#rclone config\n```\n\n\n挂载已配置的远程目录\n\n\n```\n[root@phicomm-n1:~]#rclone mount Box: /media/webdav/Box --cache-dir /tmp --allow-other --vfs-cache-mode writes --allow-non-empty &\n```\n\n*Box：配置时输入的远程目录名称\n/media/webdav/Box：远程目录挂载在本地的目录\n--cache-dir /tmp：设置上传之前暂存的目录\n&：后台运行*\n","tags":["N1","rclone"]},{"title":"花","url":"/2019/07/16/Docker使用笔记/","content":"登录docker hub：\n\n```\ndocker login –username <hub.username>**\n[root@n1:~]#docker login –username test\n```\n\n\n拉取镜像：\n```\ndocker pull <hub-user>/<repo-name>:<tag>\n[root@n1:~]#docker pull filebrowser/filebrowser:latest\n```\n\n\n上传镜像：\n```\ndocker push <hub-user>/<repo-name>:<tag>\n[root@n1:~]#docker push filebrowser/filebrowser:latest\n```\n\n\n创建镜像：\n\n以下创建docker的filebrowser为栗子\n\na.新建目录创建Dockerfile文件\n```\n[root@n1:~]#mkdir docker\n\n[root@n1:~]#cd docker\n\n[root@n1:~]#vi Dockerfile\n\n[root@n1:~]#docker build -t=”lstcml/filebrowser” .\n\nFROM arm64v8/alpine\nWORKDIR /apps/docker/\nMAINTAINER lstcml\nENV FM_VERSION 2.0.12\nENV RUN_SYSTEM linux-arm64\nRUN set -x && \\\nwget -no-check-certificate https://github.com/filebrowser/filebrowser/releases/download/v${FM_VERSION}/${RUN_SYSTEM}-filebrowser.tar.gz && \\\ntar xzf ${RUN_SYSTEM}-filebrowser.tar.gz && \\\nmkdir /apps/docker/filemanager && \\\nmv filebrowser /apps/docker/filemanager && \\\nrm -rf *.tar.gz && \\\nrm -rf LICENSE && \\\nrm -rf README.md\nVOLUME /apps/docker/filemanager\nCMD /apps/docker/filemanager/filebrowser -a 0.0.0.0 -p 8190\n```\n出现以下日志显示Successfully\n<img src=\"https://raw.githubusercontent.com/im201907/annex/master/20190717100146.png\" />\n查看镜像\n<img src=\"https://raw.githubusercontent.com/im201907/annex/master/20190717100341.png\" />\n创建容器并映射到主机的82端口\n<img src=\"https://raw.githubusercontent.com/im201907/annex/master/20190717105402.png\" />\n\n<span style=\"color: #ff0000;\"><strong>提示：可以使用mount --bind /test1 /test2，把test1目录挂载到test2上使用filebrowser管理</strong></span>\n\n进入容器：\n\n\n```\ndocker exec -it <CONTAINER ID > /bin/bash\n[root@n1:~]#docker exec -it 52ef /bin/bash\n```\n\n\n退出容器：\n\n直接在容器输入exit回车或直接按Ctrl+D即可\n\n容器与宿主机之间的拷贝文件：\n\n1、将容器中的文件/目录复制到宿主机\n\n\n```\n[root@n1:~]#docker cp frp: /apps/frp /root/frp\n```\n\n\n说明：\n\n*frp 容器名称\n/apps/frp 容器目录存放目录\n/root/frp 宿主机目录*\n\n2、将宿主机文件/目录复制到容器中\n\n\n```\ndocker cp /root/frp/frpc.ini frp:/apps/frp\n```\n\n\n说明：\n\n*frp 容器名称\n/apps/frp 容器中的目录\n/root/frp/frpc.ini 宿主机文件*\n\n容器固定ip：\n\n因为创建容器启动使用默认的网络是不支持指派固定IP的，因此自建网络\n\n\n```\n[root@n1:~]#docker network create –subnet=172.18.0.0/16 mynetwork\n```\n\n\n指派固定网络\n\n\n```\n[root@n1:~]#docker run –name mariadb -e MYSQL_ROOT_PASSWORD=123456 –network mynetwork –ip 172.22.0.9 -p 3307:3306 -d mariadb:latest\n```\n \n\n\n异常处理：\nportainer无法删除镜像：\n\n列出所有正在运行的容器\n\n\n```\n[root@n1:~]#docker ps -a\n```\n\n\n删除无tag的容器（只需CONTAINER ID的前四位）\n\n\n```\n[root@n1:~]#docker rm ab87\n```\n\n\n然后返回portainer删除该镜像","tags":["docker"]},{"title":"在N1小钢炮docker中搭建UnblockNeteaseMusic","url":"/2019/07/16/在N1小钢炮docker中搭建UnblockNeteaseMusic/","content":"1、新建镜像\n\n<img class=\"\" src=\"https://raw.githubusercontent.com/im201907/annex/master/20190716164758.png\" width=\"634\" height=\"527\" />\n\n在Web editor中输入以下内容\n\n<span style=\"color: #ff0000;\">FROM arm64v8/node:lts-alpine</span>\n\n<span style=\"color: #ff0000;\">ENV NODE_ENV production</span>\n\n<span style=\"color: #ff0000;\">WORKDIR /usr/src/app</span>\n\n<span style=\"color: #ff0000;\">RUN npm init -y</span>\n\n<span style=\"color: #ff0000;\">RUN npm install --save <a style=\"color: #ff0000;\" href=\"https://github.com/nondanee/UnblockNeteaseMusic/tarball/master\" target=\"_blank\" rel=\"noopener\">https://github.com/nondanee/UnblockNeteaseMusic/tarball/master</a></span>\n\n<span style=\"color: #ff0000;\">EXPOSE 8080</span>\n\n<span style=\"color: #ff0000;\">ENTRYPOINT [\"npx\", \"UnblockNeteaseMusic\"]</span>\n\n2、创建部署容器\n\n<img class=\"\" src=\"https://raw.githubusercontent.com/im201907/annex/master/20190716165059.png\" width=\"840\" height=\"458\" />\n\n3、最后配置XX音乐客户端代理重启即可\n\n<img class=\"\" src=\"https://raw.githubusercontent.com/im201907/annex/master/20190716165322.png\" width=\"839\" height=\"550\" />","tags":["N1","docker","UnblockNeteaseMusic","网易云"]},{"title":"在N1小钢炮docker中搭建frpc客户端","url":"/2019/07/16/在N1小钢炮docker中搭建frpc客户端/","content":"1、新建镜像\n\n<img class=\"alignnone size-medium\" src=\"https://raw.githubusercontent.com/im201907/annex/master/20190716160950.png\" width=\"823\" height=\"459\" />\n\n&nbsp;\n\n<img class=\"alignnone \" src=\"https://raw.githubusercontent.com/im201907/annex/master/20190716161655.png\" width=\"827\" height=\"655\" />\n\nWed editor中，复制以下内容进去\n\n<span style=\"color: #ff0000;\">FROM arm64v8/alpine</span>\n\n<span style=\"color: #ff0000;\">WORKDIR /apps/docker/</span>\n\n<span style=\"color: #ff0000;\">MAINTAINER lstcml</span>\n\n<span style=\"color: #ff0000;\">ENV FRP_VERSION 0.25.0</span>\n\n<span style=\"color: #ff0000;\">ENV RUN_SYSTEM linux_arm64</span>\n\n<span style=\"color: #ff0000;\">RUN set -x &amp;&amp; \\</span>\n<span style=\"color: #ff0000;\">wget --no-check-certificate https://github.com/fatedier/frp/releases/download/v${FRP_VERSION}/frp_${FRP_VERSION}_${RUN_SYSTEM}.tar.gz &amp;&amp; \\</span>\n<span style=\"color: #ff0000;\">tar xzf frp_${FRP_VERSION}_${RUN_SYSTEM}.tar.gz &amp;&amp; \\</span>\n<span style=\"color: #ff0000;\">cd frp_${FRP_VERSION}_${RUN_SYSTEM} &amp;&amp; \\</span>\n<span style=\"color: #ff0000;\">mkdir /apps/docker/frp &amp;&amp; \\</span>\n<span style=\"color: #ff0000;\">mv frpc /apps/docker/frp &amp;&amp; \\</span>\n<span style=\"color: #ff0000;\">mv frpc.ini /apps/docker/frp/frpc.ini &amp;&amp; \\</span>\n<span style=\"color: #ff0000;\">cd .. &amp;&amp; \\</span>\n<span style=\"color: #ff0000;\">rm -rf *.tar.gz &amp;&amp; \\</span>\n<span style=\"color: #ff0000;\">rm -rf frp_${FRP_VERSION}_${RUN_SYSTEM}</span>\n\n<span style=\"color: #ff0000;\">VOLUME /apps/docker/frp</span>\n\n<span style=\"color: #ff0000;\">CMD /apps/docker/frp/frpc -c /apps/docker/frp/frpc.ini</span>\n如下图提示则成功创建\n\n<img class=\"alignnone size-medium\" src=\"https://raw.githubusercontent.com/im201907/annex/master/20190716161950.png\" width=\"766\" height=\"517\" />\n\n2、创建容器\n\n<img class=\"alignnone \" src=\"https://raw.githubusercontent.com/im201907/annex/master/20190716162103.png\" width=\"771\" height=\"361\" />\n\n<img class=\"alignnone \" src=\"https://raw.githubusercontent.com/im201907/annex/master/20190716162400.png\" width=\"797\" height=\"567\" />\n\nname: 容器名称，可以自定义\nImage:镜像名称，输入刚才新建的镜像名称\n\n<img class=\"alignnone \" src=\"https://raw.githubusercontent.com/im201907/annex/master/20190716162605.png\" width=\"831\" height=\"293\" />\n\n3、进入挂载点修改frpc.ini\n\na.查看挂载点路径\n\n<img src=\"https://raw.githubusercontent.com/im201907/annex/master/20190716163025.png\" />\n\n拉到最后，Host/volume下就是挂载点路径\n\n<img src=\"https://raw.githubusercontent.com/im201907/annex/master/20190716163200.png\" />\n\nb.进入docker的volume进去该路径修改frpc.ini配置文件\n\n<img src=\"https://raw.githubusercontent.com/im201907/annex/master/20190716163346.png\" />\n\n4、启动容器\n\n<img class=\"\" src=\"https://raw.githubusercontent.com/im201907/annex/master/20190716163537.png\" width=\"913\" height=\"229\" />\n\n<strong><span style=\"color: #ff0000;\">温馨提示：</span></strong>\n\n<strong><span style=\"color: #ff0000;\">frpc.ini中的local_ip只对应当前容器的IP地址，如需映射N1的IP，则需填写N1的真实地址</span></strong>","tags":["内网穿透","N1","docker","frp"]},{"title":"分享三个Aria2的web前端","url":"/2019/07/10/分享三个Aria2的web前端/","content":"看图说话吧！\n\nAriaNg：\n\n<img class=\"alignnone size-medium\" src=\"https://raw.githubusercontent.com/im201907/annex/master/20190705173500.jpg\" width=\"1139\" height=\"476\" />\n\nwebui-aria2：\n\n<img class=\"alignnone size-medium\" src=\"https://raw.githubusercontent.com/im201907/annex/master/20190705173607.jpg\" width=\"825\" height=\"799\" />\n\nyaaw：\n\n<img class=\"alignnone size-medium\" src=\"https://raw.githubusercontent.com/im201907/annex/master/20190705173705.jpg\" width=\"1275\" height=\"349\" />\n\n<a href=\"https://pan.baidu.com/s/1AO29aBsCdGLQ4U-txXxUOA\" target=\"_blank\" rel=\"noopener\">点我下载（提取码： jib9）</a>","tags":["aria2","下载","html"]},{"title":"SoundWire - 一个能将电脑声音无线传输到 Android 手机上播放的神器","url":"/2019/07/10/SoundWire - 一个能将电脑声音无线传输到 Android 手机上播放的神器/","content":"SoundWire是一款有创意而又实用的免费虚拟声卡软件，支持将 Windows、Linux 系统以及树莓派的声音通过 WIFI 局域网无线传输串流到你的 Android 手机上播放。 SoundWire 软件的使用很简单，只需手机跟电脑是处在同一个局域网里即可。还在苦于台式电脑无外置音响吗，赶紧来体验吧！\n\n<a href=\"http://georgielabs.net/\">SoundWire官网</a>\n\n使用教程：\n\n1、双击安装对应操作系统的SoundWire_Server_setup.exe程序，然后打开\n\n<img class=\"alignnone size-medium\" src=\"https://raw.githubusercontent.com/im201907/annex/master/20190708100510.jpg\" width=\"562\" height=\"427\" />\n\n2、配置防火墙\n\n控制面板--Windows防火墙--允许应用通过Windows防火墙进行通信，勾选允许点击确定\n\n<img class=\"alignnone size-medium\" src=\"https://raw.githubusercontent.com/im201907/annex/master/20190708102918.png\" width=\"865\" height=\"504\" />\n\n3、Android 手机安装SoundWire客户端后打开，在服务器中输入PC端SoundWire中的IP地址，再点击图标连接，查看PC端显示绿色的connect即可成功\n\n<img class=\"alignnone size-medium\" src=\"https://raw.githubusercontent.com/im201907/annex/master/20190708103130.jpg\" width=\"540\" height=\"1079\" />\n\n<a href=\"https://pan.baidu.com/s/1Db11NtlHRAZH8qi63lW3tA\" target=\"_blank\" rel=\"noopener\">点我下载（提取码：evze）</a>\n\n疑问：\n\n1、输入PC端SoundWire显示的IP还是连接不了?\n\n答：请确认SoundWire显示的IP是否与Android手机连接WIFI的IP为同一局域网，如不是，请禁用部分网卡再打开SoundWire服务端\n\n2、连接成功后为什么没有声音?\n\n答：请检查手机是否为静音，如不是，请在PC端SoundWire中选择不同的声卡进行调试","tags":["声音","无线"]},{"title":"Win10重置Linux子系统用户密码教程","url":"/2019/07/09/Win10重置Linux子系统用户密码教程/","content":"<strong><span class=\"bjh-h3\">步骤一：把Linux子系统默认用户设置为root</span></strong>\n\n<!--more-->\n\n<span class=\"bjh-p\">打开cmd命令提示符或Windows PowerShell，运行以下命令：</span>\n\n<span class=\"bjh-blockquote\" style=\"color: #ff0000;\"><span class=\"bjh-p\">Ubuntu config --default-user root</span></span>\n\n<span class=\"bjh-p\">PS: 请把Ubuntu更换成你实际安装的Linux发行版名称</span>\n<div class=\"img-container\"><img class=\"alignnone size-medium\" src=\"https://raw.githubusercontent.com/im201907/annex/master/20190709161714.png\" width=\"463\" height=\"225\" /></div>\n<strong><span class=\"bjh-h3\">步骤二：运行Linux子系统重置密码</span></strong>\n\n<span class=\"bjh-p\">这时你再运行Linux子系统（例如Ubuntu），就会默认以root用户登录了。运行命令：</span>\n\n<span class=\"bjh-blockquote\"><span class=\"bjh-p\">passwd 需要重置密码的用户名</span></span>\n\n<span class=\"bjh-p\">例如：</span>\n\n<span class=\"bjh-blockquote\" style=\"color: #ff0000;\"><span class=\"bjh-p\">passwd fourday</span></span>\n\n<span class=\"bjh-p\">这时Linux子系统就会提示我们输入新密码，和以前一样，输入密码时是没有任何显示的。然后按照提示再输入一遍新密码。这时Linux子系统会提示密码更新完成。</span>\n\n<strong><span class=\"bjh-h3\">步骤三：把Linux子系统默认用户更改为已重置密码的用户</span></strong>\n\n<span class=\"bjh-p\">重置密码之后，我们就可以使用该用户登录Linux子系统了。所以，我们还要再把Linux子系统默认用户由root更改为已重置密码的用户。</span>\n\n<span class=\"bjh-p\">cmd命令提示符或Windows PowerShell，运行以下命令即可：</span>\n\n<span class=\"bjh-blockquote\" style=\"color: #ff0000;\"><span class=\"bjh-p\">Ubuntu config --default-user <span class=\"bjh-blockquote\">fourday</span></span></span>\n\n<span class=\"bjh-p\">然后我们再运行Linux子系统，就会发现已经使用该用户登录了。</span>\n<div class=\"img-container\">转载于<a href=\"https://baijiahao.baidu.com/s?id=1628573411774921146&amp;wfr=spider&amp;for=pc\" target=\"_blank\" rel=\"noopener\">Win10重置Linux子系统用户密码教程</a></div>","tags":["windows","子系统","linux","密码"]},{"title":"Snipaste 一款强大的截图贴图工具","url":"/2019/07/09/Snipaste 一款强大的截图贴图工具/","content":"<b>Snipaste</b> 是一个简单但强大的截图工具，也可以让你将截图贴回到屏幕上！<!--more-->下载并打开 <b>Snipaste</b>，按下 <code>F1</code> 来开始截图，再按 <code>F3</code>，截图就在桌面置顶显示了。就这么简单！\n\n你还可以将剪贴板里的文字或者颜色信息转化为图片窗口，并且将它们进行缩放、旋转、翻转、设为半透明，甚至让鼠标能穿透它们！如果你是程序员、设计师，或者是大部分工作时间都在电脑前，贴图功能将改变你的工作方式、提升工作效率。\n\n<b>Snipaste</b> 使用很简单，但同时也有一些较高级的用法可以进一步提升你的工作效率。感兴趣的话，请抽空读一读<a href=\"https://docs.snipaste.com/#/zh-cn/\" target=\"_blank\" rel=\"noopener\">用户手册</a>。\n\n<b>Snipaste</b> 是免费软件，它也很安全，没有广告、不会扫描你的硬盘、更不会上传用户数据，它只做它应该做的事。\n\n不过博主比较习惯使用Alt+A来截图，然后使用鼠标中间滚轮点击贴图，然后左键双击销毁贴图，来体验下呗~\n\n<img class=\"alignnone size-medium\" src=\"https://raw.githubusercontent.com/im201907/annex/master/20190709102831.png\" width=\"708\" height=\"506\" />\n\n<img class=\"alignnone \" src=\"https://raw.githubusercontent.com/im201907/annex/master/20190709111244.png\" width=\"723\" height=\"622\" />\n\n最新版本可前往<a href=\"https://zh.snipaste.com/\" target=\"_blank\" rel=\"noopener\">官网</a>下载\n\nSnipaste-1.16.2-x64：<a href=\"https://pan.baidu.com/s/12aARpoebAH5nhBz4aBdrcA\" target=\"_blank\" rel=\"noopener\">点我下载（提取码：pe53）</a>","tags":["资源分享","截图","贴图"]},{"title":"IPhone 4s 6.1.3成功安装登录微信的方法（至2019.07.08有效）","url":"/2019/07/09/IPhone 4s 6.1.3成功安装登录微信的方法（至2019.07.08有效）/","content":"此教程至2019.07.08依然有效<!--more-->\n\n教程为浅蓝月旦制作，博主亲测局部优化修改：\n\n一、准备两部手机：\n一部正常登陆微信的任何手机，一部<span style=\"color: #ff0000;\">必须</span>iOS8-9的越狱系统\n\n<span style=\"color: #ff0000;\"><strong>博主只有一台4s与红米note5，本教程以此为例</strong></span>\n\n二、4s升级至ios8.4（有ios8-9其它iPhone手机也行，如本为）\n\n6.1.3未越狱：直接在设置--通用--软件更新中进行更新\n\n6.1.3已越狱：平刷6.1.3为未越狱状态再按照未越狱方式更新（可用爱思助手平刷）\n\n三、4S升级成功后用Impactor_0.9.52工具进行越狱\n\n参考此<a href=\"http://www.liangshitian.top/go.php?url=https://www.i4.cn/news_detail_16366.html\" target=\"_blank\" rel=\"noopener\">iOS8.4.1越狱工具EtasonJB正式发布 附详细越狱教程及工具下载</a>   Tips：越狱报错可前往<a href=\"http://www.liangshitian.top/go.php?url=www.cydiaimpactor.com/\" target=\"_blank\" rel=\"noopener\">Impactor官网</a>下载最新Impactor工具使用\n\n四、越狱后添加源：apt.25pp.com，然后搜索Apple File Conduit\"2\"与AppSync Unified插件进行安装\n\n五、用91助手或其他工具安装<span style=\"color: #ff0000;\">微信-6.2.0改6.3.1 .ipa</span>，安装后手机不做任意操作（此文件可在文章底部下载）\n\n六、再用91助手或其他工具安装微信<span style=\"color: #ff0000;\">微信-6.7.4.44 .ipa</span>，安装后手机不做任意操作（此文件可在文章底部下载）\n\n七、将4S设备变成iPad\n用91助手或其他工具找到越狱路劲/User/Library/Caches中的<span style=\"color: #ff0000;\">com.apple.MobileGestalt.plist</span>文件，先导出备份，然后搜索iphone，把全部iphone字母替换为iPad，最后保存\n八、4S打开微信，然后用其他已登录微信的手机扫描登录\n\n九、登录成功后，退出微信，然后把第7步中备份的<span style=\"color: #ff0000;\">com.apple.MobileGestalt.plist</span>文件导入/User/Library/Caches中替换\n\n十、用91助手或其他工具重新安装第5步中的<span style=\"color: #ff0000;\">微信-6.2.0改6.3.1 .ipa</span>，安装后手机不做任意操作\n\n十一、用爱思助手在我的设备-应用程序-找到微信-浏览-找到除0000000000外，最长了乱码组合的文件夹打开找到<span style=\"color: #ff0000;\">mmsetting.archive</span>文件删除，然后把红包补丁<span style=\"color: #ff0000;\">WCRedEnvelopes文件夹</span>，复制到此文件夹（除0000000000外，最长了乱码组合的文件夹）根目录\n\n十二、4S打开成功登入微信，然后使用PP助手2.0（或从2.0升级为最新版的PP助手）或91助手备份微信应用及文档\n\n十三、降级4S为6.1.3并越狱（可用爱思助手直刷6.1.3再用PP助手越狱），然后添加源：<span style=\"color: #ff0000;\">apt.25pp.com</span>，搜索安装<span style=\"color: #ff0000;\">appsync for ios5.0＋6.0＋</span>插件，最后使用91或爱思助手安装第12步中备份的微信安装包即可\n\n资源分享：\n\n<a href=\"https://pan.baidu.com/s/1iaWmgtIzVq5w3fkb8xiaCA\" target=\"_blank\" rel=\"noopener\">点我下载（提取码：vtqg）</a>","tags":["6.1.3","微信","4s"]},{"title":"教你如何试听或下载网易云灰色音乐","url":"/2019/07/08/教你如何试听或下载网易云灰色音乐/","content":"致敬伟大的作者<a href=\"https://github.com/nondanee\" target=\"_blank\" rel=\"noopener\">nondanee</a>\n\n原理很简单，其实就是用网易云旧链或其他音乐平台的链接去替换，教程如下：\n\n1、下载源码：<a href=\"https://github.com/nondanee/UnblockNeteaseMusic\" target=\"_blank\" rel=\"noopener\">UnblockNeteaseMusic</a>\n解压zip文件，建议放到 C 盘的目录，不要放到平时安装程序的目录，以免CMD没权限进去导致使用失败。如（C:\\UnblockNeteaseMusic-master）\n\n2、安装 Node.js\n\n去<a href=\"https://nodejs.org/en/\" target=\"_blank\" rel=\"noopener\">官网</a>下载Node.js安装过程中记得勾选Add to Path\n\n<img class=\"alignnone size-medium\" src=\"https://raw.githubusercontent.com/im201907/annex/master/20190708114047.png\" width=\"506\" height=\"399\" />\n\n3、获得网易云音乐ip：\n\n在 cmd 中输入命令后回车：ping music.163.com获取IP地址\n\n<img class=\"alignnone size-medium\" src=\"https://raw.githubusercontent.com/im201907/annex/master/20190708114243.png\" width=\"518\" height=\"307\" />\n\n4、新建批处理运行\n\n新建文件，重命名为run.bat，然后编辑如下内容保存：\n\n<span style=\"color: #ff0000;\"><strong>@echo off</strong></span>\n<span style=\"color: #ff0000;\"><strong>cd C:\\UnblockNeteaseMusic-master</strong></span>\n<span style=\"color: #ff0000;\"><strong>node app.js -p 58000 -f 59.111.160.197</strong></span>\n\n注：\n\n第二行中的路径为步骤一存放的路径\n\n第三行中的58000为任意无占用的端口，IP地址为第三步骤中获取的IP\n\n5、右键以管理员运行刚刚保存的run.bat脚本，此批处理不能关闭，关闭即停止服务\n\n6、配置网易云云代理服务后，重启网易云即可\n\n<img class=\"alignnone \" src=\"https://raw.githubusercontent.com/im201907/annex/master/20190708115141.png\" width=\"802\" height=\"526\" />\n\n7、配置手机端代理服务（以安卓手机为例），与安装UnblockNeteaseMusic的PC端同一局域网（如下内网穿透可使用FRP、NGROK、花生壳等工具），打开WIFI高级功能，选择手动代理，输入PC的IP地址与UnblockNeteaseMusic运行使用的端口，保存后重启手机版网易云即可\n\n<img class=\"alignnone \" src=\"https://raw.githubusercontent.com/im201907/annex/master/20190708115707.png\" width=\"475\" height=\"950\" /><img class=\"alignnone \" src=\"https://raw.githubusercontent.com/im201907/annex/master/20190708115758.png\" width=\"475\" height=\"950\" />\n\n提供百度云下载（带后台运行脚本）：\n\n<a href=\"https://pan.baidu.com/s/1gZJg1qdmlZ5_C-85K9FZgw\" target=\"_blank\" rel=\"noopener\">点我下载（提取码：qsfd）</a>","tags":["音乐","网易云"]},{"title":"单机版网游--魔域","url":"/2019/07/08/单机版网游--魔域/","content":"此版本较低，不过配置需求低，双核CPU、4G内存，有个D盘且有15G左右空间即可，图片就不上了。\n\n<a href=\"https://pan.baidu.com/s/19Wtgi06sHRmgwGftjqfiqQ\" target=\"_blank\" rel=\"noopener\">点我下载（提取码：mxw9）</a>","tags":["资源分享","游戏","魔域","网游"]},{"title":"一款无数据库纯PHP的博客","url":"/2019/07/08/一款无数据库纯PHP的博客/","content":"可惜作者已经不再维护，效果如下：\n\n\n<img class=\"alignnone \" src=\"https://raw.githubusercontent.com/im201907/annex/master/20190708110726.png\" width=\"968\" height=\"630\" />\n\n<a href=\"https://pan.baidu.com/s/1_ScAo3AYgrawSN7aGaakNw\" target=\"_blank\" rel=\"noopener\">点我下载（提取码：yk5w）</a>","tags":["资源分享","博客","PHP"]},{"title":"一个漂亮的纯HTML导航页（无后台）","url":"/2019/07/08/一个漂亮的纯HTML导航页（无后台）/","content":"效果如下：\n\n<img class=\"alignnone \" src=\"https://raw.githubusercontent.com/im201907/annex/master/20190708110034.png\" width=\"884\" height=\"484\" />\n\n<a href=\"https://pan.baidu.com/s/1dopg4DBsUlQ2RumWuqBLmQ\" target=\"_blank\" rel=\"noopener\">点我下载（提取码：30ek）</a>","tags":["HTML","资源分享","导航"]},{"title":"Office无法更改加载项解决办法","url":"/2019/06/28/Office无法更改加载项解决办法/","content":"\n\n修改加载项提示：无法更改 HKEY-LOCAL-MACHINE 中注册的office 加载项的连接状态\n因为权限不足无法修改office加载项，解决办法：找到office安装路径下的office12文件夹，里面运行需修改加载项的软件（如：word等执行文件），右键点击，以管理员身份运行。这样就可以了更改加载项了。","tags":["Windows","Office"]},{"title":"ngrok.cfg模板记录","url":"/2019/06/10/ngrok.cfg模板记录/","content":"<img src=\"https://raw.githubusercontent.com/im201907/annex/master/20190724172944.png\" />\n\n\n      ```\n      #ngrok服务地址\n      server_addr: \"xxx.xxx.com:5555\"\n      trust_host_root_certs: true\n      #映射隧道\n      tunnels:\n      #自定义前缀\n        web1:\n          subdomain: \"test\"\n          proto:\n          #默认本机127.0.0.1\n            http: 80\n            https: 443\n          #自定义ip映射\n            http: 192.168.1.2:80\n            https: 192.168.1.2:443\n      #自定义域名\n        web2:\n          hostname: \"test.xxx.com\"\n          proto:\n          #默认本机127.0.0.1\n            http: \"80\"\n            https: \"443\"\n           #自定义ip映射\n            http: 192.168.1.2:80\n            https: 192.168.1.2:443\n      #自定义TCP远程端口\n        ssh1:\n          remote_port: 58000\n          proto:\n            tcp: \"22\"\n      #系统分配远程端口\n        ssh2:\n          proto:\n            tcp: \"22\"\n      ```\n      \n\n\n<a href=\"https://github.com/im201907/annex/raw/master/ngrok.cfg\" target=\"_blank\" rel=\"noopener\">点我下载</a>","tags":["内网穿透","ngrok","ngrok.cfg"]},{"title":"Windows伪装文件夹","url":"/2019/05/02/Windows伪装文件夹/","content":"\n随便一个盘里建一个文件夹 然后把你想隐藏的东西放到文件夹里然后给文件夹命名为“123.{21ec2020-3aea-1069-a2dd-08002b30309d}” （123是随便打的名字，也可以打成别的名，不过最好是数字或字母，不要打汉字）  \n恢复：把你的控制面板的文件夹改回123或你自己命名的名字，打开运行，cmd，文件夹所在盘，-ren 123.{21ec2020-3aea-1069-a2dd-08002b30309d} 123  \n文件夹重命名为：\n<pre><code class=\"language-css\">网上邻居.{208D2C60-3AEA-1069-A2D7-08002B30309D}  </code></pre>\n还原方法：运行-cmd-cd desktop-ren 网上邻居.{208D2C60-3AEA-1069-A2D7-08002B30309D} 123  \n \n附上常用电脑类标识符CLSID：\n<pre><code class=\"language-css\">excel.{00020810-0000-0000-C000-000000000046}  \nword.{00020900-0000-0000-C000-000000000046}  \nmedia.{00022603-0000-0000-C000-000000000046}  \nCAB.{0CD7A5C0-9F37-11CE-AE65-08002B2E1262}  \n计划任务.{148BD520-A2AB-11CE-B11F-00AA00530503}  \n搜索-计算机{1f4de370-d627-11d1-ba4f-00a0c91eedba}  \n网上邻居.{208D2C60-3AEA-1069-A2D7-08002B30309D}  \n我的电脑.{20D04FE0-3AEA-1069-A2D8-08002B30309D}  \n控制面板.{21EC2020-3AEA-1069-A2DD-08002B30309D}  \n打印机.{2227A280-3AEA-1069-A2DE-08002B30309D}  \nhtml.{25336920-03f9-11cf-8fd0-00aa00686f13}  \nmht.{3050F3D9-98B5-11CF-BB82-00AA00BDCE0B}  \nmshta.{3050f4d8-98B5-11CF-BB82-00AA00BDCE0B}  \n我的文档.{450D8FBA-AD25-11D0-98A8-0800361B1103}  \nXML.{48123bc4-99d9-11d1-a6b3-00c04fd91555}  \n回收站(满).{5ef4af3a-f726-11d0-b8a2-00c04fc309a4}  \n回收站.{645FF040-5081-101B-9F08-00AA002F954E}  \nftp_folder.{63da6ec0-2e98-11cf-8d82-444553540000}  \n网络和拨号连接.{7007ACC7-3202-11D1-AAD2-00805FC1270E}  \n写字板文档.{73FDDC80-AEA9-101A-98A7-00AA00374959}  \nTemporary Offline Files Cleaner.{750fdf0f-2a26-11d1-a3ea-080036587f03}  \n用户和密码.{7A9D77BD-5403-11d2-8785-2E0420524153}  \nInternet 临时文件.{7BD29E00-76C1-11CF-9DD0-00A0C9034933}  \n已下载的程序文件的清除程序.{8369AB20-56C9-11D0-94E8-00AA0059CE02}  \n公文包.{85BBD920-42A0-1069-A2E4-08002B30309D}  \nActiveX 高速缓存文件夹.{88C6C381-2E85-11D0-94DE-444553540000}    \nmail.{9E56BE60-C50F-11CF-9A2C-00A0C90A90CE}  \n历史记录.{FF393560-C2A7-11CF-BFF4-444553540000}    \n目录.{fe1290f0-cfbd-11cf-a330-00aa00c16e65}  \nInternet Explorer.{FBF23B42-E3F0-101B-8488-00AA003E56F8}  \nSnapshot File.{FACB5ED2-7F99-11D0-ADE2-00A0C90DC8D9}  \n预订文件夹.{F5175861-2688-11d0-9C5E-00AA00A45957}  \nMyDocs Drop Target.{ECF03A32-103D-11d2-854D-006008059367}  \nPolicy Package.{ecabaebd-7f19-11d2-978E-0000f8757e2a}  \n搜索结果.{e17d4fc0-5564-11d1-83f2-00a0c90dc849}  \n添加网上邻居.{D4480A50-BA28-11d1-8E75-00C04FA31A86}  \nPaint.{D3E34B21-9D75-101A-8C3D-00AA001A1652}  \n管理工具.{D20EA4E1-3957-11d2-A40B-0C5020524153}  \n字体.{D20EA4E1-3957-11d2-A40B-0C5020524152}  \nWeb Folders.{BDEADF00-C265-11d0-BCED-00A0C90AB50F}  \nDocFind Command.{B005E690-678D-11d1-B758-00A0C90564FE}  \n脱机文件夹.{AFDB1F70-2A4C-11d2-9039-00C04F8EEB3E}  \n打印机.{2227A280-3AEA-1069-A2DE-08002B30309D}  \n上帝模式.{ED7BA470-8E54-465E-825C-99712043E01C}</code></pre>\n","tags":["Windows","伪装","文件夹","隐藏"]},{"title":"Windows后台运行Bat批处理","url":"/2019/04/21/Windows后台运行Bat批处理/","content":"\n方法一\nbat里有隐藏窗口的命令，很简单，只需要在代码头部加一段代码就可以了。\n \n<pre><code class=\"language-css\">@echo off   \nif \"%1\" == \"h\" goto begin \nmshtavbscript:createobject(\"wscript.shell\").run(\"%~nx0 h\",0)(window.close)&&exit   \n:begin  \n下面是你自己的代码。</code></pre>\n方法二\n可以编辑一个vbs脚本，在其中以隐藏窗口运行批处理程序。  \n<pre><code class=\"language-css\">Set ws = CreateObject(\"Wscript.Shell\")  \nws.run \"cmd /c 1.bat\",vbhide</code></pre>\n \n以上代码拷贝到记事本中，保存为\"1.vbs\"或者其它的名字（扩展名必须是.vbs），然后点击运行生成的脚本1.vbs，即可隐藏运行指定的批处理程序。\n","tags":["Windows","后台运行","bat","批处理"]},{"title":"PVE虚拟机增加硬盘","url":"/2019/04/10/PVE虚拟机增加硬盘/","content":"直接点击执行数据中心shell，在shell中操作以下步骤：\n\n1、执行磁盘分区命令：\n\n\n```\nroot@pve:/#fdisk /dev/sdb\n```\nWelcome to fdisk(util-linux 2.25.2).\n\nChanges will remainin memory only, until you decide to write them.\n\nBe careful beforeusing the write command.\n\n`Command (m forhelp):g `(建立GPT分区表)\n\n`Command (m forhelp):n`(建立一个新的分区，输入分区号、起始结束扇区等)\n\n其他默认，直接按回车，接着继续：\n\n`Command (m forhelp):t`(改变分区类型31)\n\nSelected partition1\n\n`Partition type(type L to list all types):31`(分区1的类型改变为Linux LVM)\n\n`Command(m for help): w` (写入磁盘并退出fdisk)\n\n2、在分区/dev/sdb1上创建物理卷physical volume (PV)：\n\n\n```\npvcreate /dev/sdb1\n```\n\n\n3、创建卷组volume group (VG)，VG名为“vg-pve”\n\n\n```\nvgcreate vg-pve /dev/sdb1\n```\n\n\n至此，iSCSI共享存储已准备就绪。可供proxmoxVE使用了,在“数据中心”下存储栏，添加新的存储LVM，选择之前添加的vg-pve卷组，左侧下方会出现新增存储名称，即可在虚拟机添加硬件","tags":["PVE","虚拟机"]},{"title":"padavan-一级路由设备访问二级路由与其下设备","url":"/2019/04/06/padavan-一级路由设备访问二级路由与其下设备/","content":"假设：\n\n一级路由（任意路由器），DHCP池范围为192.168.8.2-192.168.8.100，\n\n1、设置padavan无线ap模式\n\n有线或无线连接上padavan路由，然后在高级设置--系统管理--操作模式中选择无线接入点 (AP)，此时网络会断开，稍等片刻等自动连上\n\n2、设置LAN固定ip\n\n在内部网络--内网设置中，关闭自动获取 IP 地址，然后输入一级路由DHCP池中的任意<a class=\"help_tooltip\" data-original-title=\"IP 地址:\" data-content=\"RT-N56UB1-newif3D2-512M 在内部网路的 IP 地址。设置值为 192.168.123.1。在 IP 为基础的网络中数据包将被送至网络装置的具体 IP 地址上。\">IP 地址，如：192.168.8.88，</a><a class=\"help_tooltip\" data-original-title=\"子网掩码:\" data-content=\"RT-N56UB1-newif3D2-512M 的内网子网掩码，默认值是 255.255.255.0\">子网掩码、</a><a class=\"help_tooltip\" data-original-title=\"默认网关:\" data-content=\"这是默认网关的 IP 地址\">默认网关与</a><a class=\"help_tooltip\" data-original-title=\"子网掩码:\" data-content=\"RT-N56UB1-newif3D2-512M 的内网子网掩码，默认值是 255.255.255.0\">一级路由保持一致</a>\n\n3、一级路由LAN接二级路由WAN\n\n用有线连接一级路由的LAN与二级路由的WAN即可\n\n此时一级路由下的设备能访问二级路由管理页，也能访问二级路由下的设备~\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;","tags":["padavan","路由器"]},{"title":"在windows下如何添加、删除和修改静态路由","url":"/2019/04/03/在windows下如何添加、删除和修改静态路由/","content":"1、添加一条路由表\n\n\n```\nroute add 192.168.100.0 mask 255.255.255.248 192.168.1.1 metric 3 if 2\n```\n\n\n添加一条路由记录，所有到192.168.100.0/24网段的数据包，都通过2号（网卡）接口走192.168.1.1的网关，优先级为3。\n\n\n```\nroute add -p 192.168.100.0 mask 255.255.255.248 192.168.1.1 metric 3 if 2\n```\n\n\n作用同上，只是这是一条永久路由，不会因为重启机器而丢失。\n\n2、删除一条路由表\n\n\n```\nroute delete 192.168.100.0\n```\n\n\n注意：如果有两条路由记录有着相同的“目的网络号”，则会将两条记录同时删除。如果只想删除其中某一条的话，请在删除后用route add命令再添加上其中一条。\n\n3、修改一条路由记录\n\n```\nroute change 157.0.0.0 mask 255.0.0.0 157.55.80.5 metric 2 if 2\n```\nCHANGE参数只能修改“网关”和“跳数”。","tags":["windows","路由","静态路由"]},{"title":"WordPress手动自定义文章显示数量","url":"/2019/04/03/WordPress手动自定义文章显示数量/","content":"修改每页显示的文章数也就是修改posts_per_page参数，将下面的代码放到当前主题中的functions.php中即可实现，注意修改后，WordPress中的首页文章显示数设置无效：\n\n```\nfunction custom_posts_per_page(){\nif(is_home()){\n->set(‘posts_per_page’,8);//首页每页显示8篇文章\n\nif(is_search()){\n->set(‘posts_per_page’,-1);//搜索页显示所有匹配的文章，不分页\n}\nif(is_archive()){\n->set(‘posts_per_page’,25);//archive每页显示25篇文章\n}//endif\n}//function\n\n//this adds the function above to the ‘pre_get_posts’ action \nadd_action(‘pre_get_posts’,’custom_posts_per_page’);}\n```\n","tags":["博客","WordPress"]},{"title":"利用Onedrive搭建OneIndex","url":"/2019/04/03/利用Onedrive搭建OneIndex/","content":"OneIndex特点：\n不占用服务器空间，不走服务器流量，直接列OneDrive目录<!--more-->，文件直链下载，无需数据库！\n可用作个人网盘/图床/文件外链/公共资源下载/上传等\n\n需求：\n\n 1. PHP空间，PHP 5.6+ 打开curl支持\n 1. onedrive 账号 (个人、企业版或教育版/工作或学校帐户)\n 1. oneindex 程序\n\n上传 Oneindex程序源码到根目录（master目录下文件，不要包含 master文件夹）\nOneindex源码的下载地址:\nhttps://codeload.github.com/donwa/oneindex/zip/master\n\n站点配置：\n\n接下来打开站点，会出现系统检测，一切正常点击下一步\n\n<img height=\"335\" /><img class=\"alignnone size-medium\" src=\"https://raw.githubusercontent.com/im201907/annex/master/20190705182102.jpg\" width=\"1582\" height=\"519\" />\n\n按照提示一步一步操作即可：\n\n后台地址：\nhttps://xx.com/?/admin，默认密码：oneindex，网站根目录/home/wwwroot/xxx.com\n\n添加计划任务（建议，但非必要）：\n\n可以通过宝塔的计划任务或crontab -e命令添加\n\n每小时刷新一次token：\n\n0 /具体路径/php /程序具体路径/one.php token:refresh\n\n每十分钟后台刷新一遍缓存：\n\n/10 * /具体路径/php /程序具体路径/one.php cache:refresh\n\n特殊文件实现功能：\n\nREADME.md、HEAD.md、.password特殊文件使用\n\n可以参考https://github.com/donwa/oneindex/tree/files\n\n在文件夹底部添加说明：\n\n在onedrive的文件夹中添加README.md文件，使用markdown语法。\n\n在文件夹头部添加说明：\n\n在onedrive的文件夹中添加HEAD.md文件，使用markdown语法。\n\n加密文件夹：\n\n在onedrive的文件夹中添加.password文件，填入密码，密码不能为空。\n\n直接输出网页：\n\n在onedrive的文件夹中添加index.html文件，程序会直接输出网页而不列目录。\n\n<span style=\"color: #ff0000;\"><strong>绑定技巧（供参考）：</strong></span>\n\n往往在最后一步绑定账号的时候会出现莫名其妙的问题，比如Onedrive账号登录失败、安装失败等等，可参考一下安装步骤：\n\n<span style=\"color: #ff0000;\">1、在浏览器A中根据安装教程一直到最后一步绑定账号时，先别点击绑定账号的按钮（如果已经点击这按钮可以删掉源码重新安装至绑定账号这一步）</span>\n\n<span style=\"color: #ff0000;\">2、打开浏览器B，输入安装路径，点击下一步，其实默认已经记录在浏览器A中输入client_id与client_secret，点击下一步，点击绑定账号，然后手动输入邮箱、密码登录onedrive</span>\n\n<span style=\"color: #ff0000;\">3、提示授权时，先别点击确定，等大概5秒左右，点击确定，等待跳转至提示安装成功即可</span>","tags":["onedrive","oneindex","资源站"]},{"title":"Win10启动文件夹","url":"/2019/04/01/Win10启动文件夹/","content":"“启动”文件夹分为两种：“系统启动文件夹”与“用户启动文件夹”\n\n系统启动文件夹：\n把应用程序或其快捷方式放到“系统启动文件夹”里能实现应用程序在所有的用户登录系统后都能自动启动,系统启动文件夹为：\n\n<span style=\"color: #0000ff;\"><strong>C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp</strong></span>\n\n注：C盘为系统盘\n\n也可在运行中运行命令：\n\n<strong><span style=\"color: #0000ff;\">shell:Common Startup</span></strong>\n\n或\n\n<strong><span style=\"color: #0000ff;\">%programdata%\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp</span></strong>\n\n用户启动文件夹：\n把应用程序的快捷方式放到该用户的“启动”文件夹里能实现某个应用程序只在某个用户登录系统时自动启动，Windows10单个用户的“启动”文件夹路径为：\n\n<span style=\"color: #0000ff;\"><strong>C:\\Users\\Administrator\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup</strong></span>\n\n注：C盘为系统盘，Administrator用当前用户\n也可在运行中运行命令：\n\n<strong><span style=\"color: #0000ff;\">shell:startup</span></strong>","tags":["自启","windows","启动"]},{"title":"宝塔面板破解专业版","url":"/2019/04/01/宝塔面板破解专业版/","content":"<strong>宝塔5.9：\n\n1、切换root用户\n\n\n```\nsudo su root\n```\n\n\n2、升级到宝塔专业版\n\n\n```\nwget -O update.sh http://download.bt.cn/install/update_pro.sh && bash update.sh pro\n```\n\n\n3、建立userInfo.json空文件\n\n\n```\necho > /www/server/panel/data/userInfo.json\n```\n\n\n4、最后重启你的面板\n\n```\n/etc/init.d/bt restart\n```\n","tags":["宝塔","面板"]},{"title":"如何镜像或克隆一个网站","url":"/2019/04/01/如何镜像或克隆一个网站/","content":"windows与linux中下载使用最新的wget，命令如下：\n\n```\nwget -c -m -k -np -p -E -U Mozilla --no-check-certificate 需要镜像的网站\n```\n","tags":["wget","镜像","克隆"]},{"title":"关于网易音乐由于版权保护，无法生成外链解决方案","url":"/2019/04/01/关于网易音乐由于版权保护，无法生成外链解决方案/","content":"1、首选到网易音乐中点击需要生成外链的歌单\n\n如：<strong>https://music.163.com/#/playlist?id=2728824287</strong>中，id=后面这一串数字就是歌单id\n\n2、然后在浏览器中输入一下：http://music.163.com/outchain/0/+歌单id即可\n\n如：<strong>http://music.163.com/outchain/0/2728824287</strong>","tags":["外链","网易","音乐"]},{"title":"使用GDList挂载Google Drive和OneDrive网盘","url":"/2019/03/12/使用GDList挂载Google Drive和OneDrive网盘/","content":"简介\nGDList可以将Google Drive和OneDrive分享出的文件夹ID挂载成网盘。即使你没网盘也没关系。还不占服务器空间，不消耗服务器流量；可多个Google Drive和OneDrive同时挂载到网盘；支持直链下载、在线预览（图片、视频、音频）。\nGithub地址：https://github.com/reruin/gdlist\n\n系统要求：CentOS、Debian、Ubuntu\n运行命令：\n\nDebian/Ubuntu系统\n<pre><code class=\"language-css\">apt-get -y install git</code></pre>\nCentOS/RHEL系统\n<pre><code class=\"language-css\">yum -y install git</code></pre>\n下载源码安装\n<pre><code class=\"language-css\">git clone https://github.com/reruin/sharelist.git\ncd sharelist && bash install.sh</code></pre>\n完成后，访问http://ip:33001 进入界面开始设置，记住网盘文件夹要共享一下，不然会出现500错误。  \n![](https://raw.githubusercontent.com/a512154224/a512154224.github.io/master/picture/1004489020.png)  \n注意输入的ID，添加后记得清空缓存。\n\nGoogle Drive\n分享链接一般是https://drive.google.com/drive/folders/xxxx?usp=sharing 则ID为xxxx。\n\nOneDrive\n分享链接一般是https://1drv.ms/f/xxxx 则ID为xxxx。\n","tags":["挂载","GoogleDrive","OneDrive","网盘","GDList"]},{"title":"Nextcloud挂载数据盘(NTFS)","url":"/2019/03/02/Nextcloud挂载数据盘(NTFS)/","content":"armbian版本：ARMBIAN 5.44 user-built Ubuntu 18.04.2 LTS 3.14.29  \n  \nnextcloud部署完后，在数据目录下的file目录下创建挂载NTFS的目录  \n<pre><code class=\"language-css\">root@amlogic:~#mkdir -p /var/www/html/syncloud/data/liangst/files/mydisk</code></pre>\n\n把NTFS挂载在该目录（建议开机挂载）  \n<pre><code class=\"language-css\">root@amlogic:~#mount -t ntfs-3g /dev/sda1 /var/www/html/syncloud/data/liangst/files/mydisk</code></pre>\n\n切换到nextcloud安装目录，执行刷新nextcloud文件目录索引的命令  \n<pre><code class=\"language-css\">root@amlogic:~#cd /var/www/html/syncloud/  \nroot@amlogic:/var/www/html/syncloud/#sudo -u www-data php occ files:scan --all --quiet</code></pre>\n\n如果需要解除挂载磁盘，但又报device is busy\n\n<pre><code class=\"language-css\">fuser -km /var/www/html/syncloud/data/liangst/files/mydisk  \numount -t ntfs-3g /dev/sda1</code></pre>","tags":["挂载","网盘","NTFS","Nextcloud","数据盘"]},{"title":"N1安装webmin","url":"/2019/02/27/N1安装webmin/","content":"armbian版本：ARMBIAN 5.44 user-built Ubuntu 18.04.2 LTS 3.14.29  \n  \n添加webmin源\n<pre><code class=\"language-css\">vi /etc/apt/sources.list</code></pre>\n在末尾处添加\n<pre><code class=\"language-css\">deb http://download.webmin.com/download/repository sarge contrib</code></pre>\n<pre><code class=\"language-css\">deb http://webmin.mirror.somersettechsolutions.co.uk/repository sarge contrib</code></pre>\n安装 GPG key\n<pre><code class=\"language-css\">cd /root\nwget http://www.webmin.com/jcameron-key.asc\napt-key add jcameron-key.asc</code></pre>\n安装webmin\n<pre><code class=\"language-css\">apt-get update\napt-get install webmin</code></pre>\n访问https://ip:10000即可，账号密码为登录N1的root用户（必须为https访问）","tags":["N1","斐讯","webmin"],"categories":["-N1"]},{"title":"N1配置Apache2多端口多站点","url":"/2019/02/25/N1配置Apache2多端口多站点/","content":"armbian版本：ARMBIAN 5.44 user-built Ubuntu 18.04.2 LTS 3.14.29  \n  \n修改 /etc/apache2/ports.conf文件添加一个新的监听端口  \n<pre><code class=\"language-css\">Listen 8080</code></pre>\n\n复制一份配置文件  \n<pre><code class=\"language-css\">cd /etc/apache2/sites-available/\ncp 000-default.conf 001-default.conf</code></pre>\n\n修改001-default.conf中端口与网页路径  \n<pre><code class=\"language-css\"><VirtualHost *:8080>  \nDocumentRoot /media/sda1/www/wwwroot</code></pre>\n\n在配置启动文件夹中建立软链接  \n<pre><code class=\"language-css\">cd /etc/apache2/sites-enabled  \nln -s ../sites-available/001-default.conf 001-default.conf</code></pre>\n\n重启服务  \n<pre><code class=\"language-css\">service apache2 restart</code></pre>","tags":["N1","斐讯","Apache2","站点","多站点","端口","多端口"]},{"title":"N1安装supervisor（管理进程）","url":"/2019/02/22/N1安装supervisor（管理进程）/","content":"armbian版本：ARMBIAN 5.44 user-built Ubuntu 18.04.2 LTS 3.14.29  \n  \n用python安装  \n<pre><code class=\"language-css\">root@amlogic:~#apt-get install python-setuptools  \nroot@amlogic:~#wget https://bootstrap.pypa.io/ez_setup.py -O - | python  \nroot@amlogic:~#easy_install supervisor</code></pre>  \n\n\n生成默认配置文件(supervisord.conf)\n\n<pre><code class=\"language-css\">root@amlogic:~#echo_supervisord_conf > /etc/supervisord.conf</code></pre>\n\n\n管理进程  \n编辑supervisor配置文件  \n<pre><code class=\"language-css\">root@amlogic:~#vi /etc/supervisord.conf </code></pre> \n把以下内容加到/etc/supervisord.conf尾部  \n<pre><code class=\"language-css\">[program:py-kms]  \ncommand=python /usr/local/py-kms/server.py  \nautorestart=true  \nuser=root</code></pre>\n\n\n以daemon方式运行，执行  \n<pre><code class=\"language-css\">supervisord</code></pre>\n\n停止supervisord  \n<pre><code class=\"language-css\">supervisorctl shutdown</code></pre>\n\n重新加载配置文件  \n<pre><code class=\"language-css\">supervisorctl reload</code></pre>\n\n\n[进程管理]\n启动supervisord管理的所有进程  \n<pre><code class=\"language-css\">supervisorctl start all</code></pre>\n\n停止supervisord管理的所有进程  \n<pre><code class=\"language-css\">supervisorctl stop all</code></pre>\n\n启动supervisord管理的某一个特定进程  \n<pre><code class=\"language-css\">supervisorctl start program-name // program-name为[program:xx]中的xx</code></pre>\n\n停止supervisord管理的某一个特定进程  \n<pre><code class=\"language-css\">supervisorctl stop program-name  // program-name为[program:xx]中的xx</code></pre>\n\n重启所有进程或所有进程  \n<pre><code class=\"language-css\">supervisorctl restart all  // 重启所有  \nsupervisorctl reatart program-name // 重启某一进程，program-name为[program:xx]中的xx</code></pre>\n\n查看supervisord当前管理的所有进程的状态  \n<pre><code class=\"language-css\">supervisorctl status</code></pre>\n\n需要开机启动的话，在/etc/rc.local尾部添加supervisord即可（exit 0前）","tags":["开机启动","N1","斐讯","supervisor","进程管理","服务管理"]},{"title":"N1安装NFS服务端","url":"/2019/02/22/N1安装NFS服务端/","content":"armbian版本：ARMBIAN 5.44 user-built Ubuntu 18.04.2 LTS 3.14.29  \n  \n安装NFS服务  \n<pre><code class=\"language-css\">apt install nfs-kernel-server</code></pre>\n\n编写配置文件  \n<pre><code class=\"language-css\">vi /etc/exports\n\n/etc/exports文件的内容如下：  \n/tmp *(rw,sync,no_subtree_check,no_root_squash)  \n/media/sda1/share *(rw,sync,no_subtree_check,no_root_squash)  \n/logs *(rw,sync,no_subtree_check,no_root_squash)</code></pre>\n\n创建共享目录  \n在服务器端创建/tmp /data和/logs共享目录\n<pre><code class=\"language-css\">sudo mkdir -p /tmp  \nsudo mkdir -p /data  \nsudo mkdir -p /logs</code></pre>\n\n重启nfs服务：  \n<pre><code class=\"language-css\">service nfs-kernel-server restart</code></pre>","tags":["N1","斐讯","NAS","NFS"]},{"title":"N1安装bypy同步百度云","url":"/2019/02/21/N1安装bypy同步百度云/","content":"armbian版本：ARMBIAN 5.44 user-built Ubuntu 18.04.2 LTS 3.14.29  \n  \n安装pip  \n<pre><code class=\"language-css\">root@amlogic:~#apt-get install python-pip</code></pre>\n\n安装python的requests库  \n<pre><code class=\"language-css\">root@amlogic:~#apt-get install python-requests</code></pre>\n\n安装bypy  \n<pre><code class=\"language-css\">root@amlogic:~#pip install bypy</code></pre>\n\n授权  \n<pre><code class=\"language-css\">root@amlogic:~#bypy info </code></pre> \n出现一个网址，在浏览器中打开，并在网址中复制授权码，然后再终端Press [Enter] when you are done\n下方粘贴复制的授权码，回车，等待完成即可，完成后在百度网盘的【我的应用数据】下面已经多了一个目录，【bypy】，bypy所上传的文件都会在这个目录下面，只能下载该目录里面的文件。\n\n上传单个文件的命令如下：bypy upload 文件名，如：  \n<pre><code class=\"language-css\">bypy upload 上传的文件名字</code></pre>\n\n把当前目录同步到云盘，下面两个命令都可以  \n<pre><code class=\"language-css\">bypy syncup 目录地址  \nbypy upload 目录地址</code></pre>\n\n下载单个文件  \n<pre><code class=\"language-css\">bypy downfile 下载文件名</code></pre>\n\n把云盘内容下载到本地来，下面两个命令也可以  \n<pre><code class=\"language-css\">bypy syncdown 目录地址  \nbypy downdir 目录地址</code></pre>\n\n定时上传  \n进入编辑crontab  \n<pre><code class=\"language-css\">root@amlogic:~#crontab -e</code></pre>\n\n添加每隔5分钟执行一次上传命令  \n<pre><code class=\"language-css\">*/5 * * * * bypy upload /var/www/html/syncloud/data/liangst/files >> /bypyupload.log</code></pre>\n\n重启cron 服务  \n<pre><code class=\"language-css\">root@amlogic:~#service cron restart</code></pre>","tags":["N1","斐讯","百度云","同步","bypy"]},{"title":"N1安装samba(访客模式)","url":"/2019/02/21/N1安装samba(访客模式)/","content":"armbian版本：ARMBIAN 5.44 user-built Ubuntu 18.04.2 LTS 3.14.29  \n  \n安装samba服务  \n<pre><code class=\"language-css\">apt-get install samba samba-common</code></pre>\n\n修改samba配置文件添加无密码共享  \n<pre><code class=\"language-css\">/etc/samba/smb.conf</code></pre> \n在尾部添加以下内容  \n<pre><code class=\"language-css\">[share]\n    \ncomment = share  \npath = /media/sda1/share  \npublic = yes  \nwritable = yes  \nbrowseable=yes  \navailable=yes  \nguest ok=yes</code></pre>\n重启服务  \n<pre><code class=\"language-css\">service smbd restart</code></pre>","tags":["N1","斐讯","NAS","samba","访客"]},{"title":"N1_ubuntu安装ss客户端","url":"/2019/02/20/N1_ubuntu安装ss客户端/","content":"armbian版本：ARMBIAN 5.44 user-built Ubuntu 18.04.2 LTS 3.14.29  \n  \n一、安装SS客户端  \n1、安装pip  \n<pre><code class=\"language-css\">apt install python-gevent python-pip</code></pre>\n\n2、安装ss  \n<pre><code class=\"language-css\">pip install shadowsocks</code></pre>\n\n3、生成配置文件   \n<pre><code class=\"language-css\">vi /etc/shadowsocks.json\n\n{  \n\"server\":\"your_server_ip\", #ss服务器IP\n\n\"server_port\":your_server_port, #端口\n\n\"local_address\": \"127.0.0.1\", #本地ip\n\n\"local_port\":1080, #本地端口\n\n\"password\":\"your_server_passwd\", #连接ss密码\n\n\"timeout\":300, #等待超时\n\n\"method\":\"rc4-md5\", #加密方式\n\n\"fast_open\": false,\n  \n  # true 或 false。如果你的服务器 Linux 内核在3.7+，可以开启 fast_open 以降低延迟。开启方法： echo 3 > /proc/sys/net/ipv4/tcp_fastopen 开启之后，将 fast_open 的配置设置为 true 即可\n\n\"workers\": 1 # 工作线程数  \n}</code></pre>\n\n4、后台运行  \n<pre><code class=\"language-css\">nohup sslocal -c /etc/shadowsocks.json /dev/null 2>&1 & </code></pre>\n\n5、验证Shadowsocks客户端服务是否正常运行  \n<pre><code class=\"language-css\">curl --socks5 127.0.0.1:1080 http://httpbin.org/ip</code></pre>\n出现SS服务器IP地址即运行正常\n\n二、设置代理  \n\n1、安装privox  \n<pre><code class=\"language-css\">apt-get install privoxy -y</code></pre> \n启动privoxy服务  \n<pre><code class=\"language-css\">systemctl enable privoxy  \nsystemctl start privoxy  \nsystemctl status privoxy</code></pre>\n\n2、配置privoxy\n<pre><code class=\"language-css\">vi /etc/privoxy/config 添加socks5代理，如下:\n\nlisten-address 127.0.0.1:8118 # 8118 是默认端口，不用改  \nforward-socks5t / 127.0.0.1:1080 . #转发到本地端口，注意最后有个点</code></pre>\n\n3、设置http、https代理\n<pre><code class=\"language-css\">vi /etc/profile 在最后添加如下信息  \nPROXY_HOST=127.0.0.1  \nexport all_proxy=http://$PROXY_HOST:8118  \nexport ftp_proxy=http://$PROXY_HOST:8118  \nexport http_proxy=http://$PROXY_HOST:8118  \nexport https_proxy=http://$PROXY_HOST:8118  \nexport no_proxy=localhost,172.16.0.0/16,192.168.0.0/16.,127.0.0.1,10.10.0.0/16</code></pre>\n重载环境变量  \n<pre><code class=\"language-css\"> source /etc/profile</code></pre>\n\n遇到的坑：  \n1、pip安装ss报错解决  \n<pre><code class=\"language-css\">vi /usr/bin/pip  \n解决方案：  \n原：from pip import main   \n修改后：from pip._internal import main</code></pre>\n\n2、SS报错1  \n<pre><code class=\"language-css\">AttributeError: /usr/lib/x86_64-linux-gnu/libcrypto.so.1.1: undefined symbol  \n解决方案：  \n\n修改/usr/local/lib/python2.7/dist-packages/shadowsocks/crypto/openssl.py  \n\nlibcrypto.EVP_CIPHER_CTX_cleanup.argtypes = (c_void_p,)  \n替换成  \nlibcrypto.EVP_CIPHER_CTX_reset.argtypes = (c_void_p,)  \n\nlibcrypto.EVP_CIPHER_CTX_cleanup  \n替换成  \nlibcrypto.EVP_CIPHER_CTX_reset</code></pre>\n\n3、SS报错2  \n![](https://raw.githubusercontent.com/a512154224/a512154224.github.io/master/picture/1004489021.jpg)\n\n解决方案：  \n  \n<pre><code class=\"language-css\">vi /usr/local/lib/python2.7/dist-packages/shadowsocks/crypto/openssl.py  \n\nlibcrypto.EVP_CIPHER_CTX_cleanup.argtypes = (c_void_p,)   \n改成：  \nlibcrypto.EVP_CIPHER_CTX_reset.argtypes = (c_void_p,)  \n\nlibcrypto.EVP_CIPHER_CTX_cleanup(self._ctx)   \n改成：  \nlibcrypto.EVP_CIPHER_CTX_reset(self._ctx)\n\n取消代理命令  \nwhile read var; do unset $var; done < <(env | grep -i proxy | awk -F= '{print $1}')</code></pre>\n","tags":["N1","斐讯","NAS","SS","代理"]},{"title":"编译安装N2N（centos7）","url":"/2019/02/20/编译安装N2N（centos7）/","content":"\n1、安装依赖包\n<pre><code class=\"language-css\">yum install subversion gcc-c++ openssl-devel git cmake</code></pre>\n2、下载n2n源码包\n<pre><code class=\"language-css\">git clone https://github.com/meyerd/n2n.git\n</code></pre>\n3、编译\n<pre><code class=\"language-css\">cd n2n/n2n_v2  \nmkdir build  \ncd build  \ncmake ..  \nmake  \nmake install</code></pre>\na、开启supernode服务端口\n<pre><code class=\"language-css\">supernode -l 1000</code></pre>\nb、开启edge客户端\n<pre><code class=\"language-css\">edge -d test02 -c test -k key -a 10.0.0.2 -l 140.143.150.150:1000 >/dev/null &</code></pre>","tags":["编译","n2n","内网穿透","内网映射","穿透","映射"]},{"title":"N1开启zerotier穿透","url":"/2019/02/19/N1开启zerotier穿透/","content":"armbian版本：ARMBIAN 5.44 user-built Ubuntu 18.04.2 LTS 3.14.29  \n  \n先去http://www.zerotier.com/注册账户，创建Network，获取Network ID，然后回到N1中把zerotier源码拉下来\n\n<pre><code class=\"language-css\">root@amlogic:~# git clone https://github.com/zerotier/ZeroTierOne.git</code></pre>\n\n然后进入ZeroTierOne目录，开始编译安装  \n<pre><code class=\"language-css\">root@amlogic:~# cd ZeroTierOne/  \nroot@amlogic:~/ZeroTierOne# make selftest  \nroot@amlogic:~/ZeroTierOne# make && make install</code></pre>\n\n把zerotier服务拷贝到amlogic系统服务目录中，然后重新加载下，再启动zerotier服务  \n<pre><code class=\"language-css\">root@amlogic:~/ZeroTierOne# cp debian/zerotier-one.service /etc/systemd/system  \nroot@amlogic:~/ZeroTierOne# systemctl daemon-reload  \nroot@amlogic:~/ZeroTierOne# systemctl start zerotier-one</code></pre>\n\n加入之前局域网，XXXXXXXXXX为ZeroTier中创建的Network ID  \n<pre><code class=\"language-css\">root@amlogic:/var/lib/zerotier-one# zerotier-cli join XXXXXXXXXX</code></pre>","tags":["内网穿透","穿透","N1","斐讯","zerotier","局域网"]},{"title":"N1开机挂载NTFS分区","url":"/2019/02/15/N1开机挂载NTFS分区/","content":"armbian版本：ARMBIAN 5.44 user-built Ubuntu 18.04.2 LTS 3.14.29  \n  \n安装ntfs-3g  \n<pre><code class=\"language-css\">root@amlogic:~#apt-get install ntfs-3g</code></pre>\n\n<pre><code class=\"language-css\">root@amlogic:~#fdisk -l</code></pre>\n\n挂载的是一块250G的移动硬盘在下面的一段可以看到  \n/dev/sda1 就是该移动硬盘的文件连接，然后创建了挂载目录  \n<pre><code class=\"language-css\">root@amlogic:~#mkdir -p  /mydisk</code></pre>\n\n编辑开机挂载  \n<pre><code class=\"language-css\">root@amlogic:~#vi /etc/fstab</code></pre>\n\n在尾部插入以下内容 \n<pre><code class=\"language-css\"> /dev/sda1       /media/sda1                ntfs            defaults,noatime                        0 0</code></pre>\n\n重启生效  \n<pre><code class=\"language-css\">root@amlogic:~#reboot</code></pre>","tags":["挂载","N1","斐讯","NAS","samba","NTFS"]},{"title":"Ubuntu可用国内源","url":"/2019/02/11/N1可用的Ubuntu源（国内）/","content":"\narmbian版本：ARMBIAN 5.44 user-built Ubuntu 18.04.2 LTS 3.14.29  \n  \n\n```\ndeb https://mirrors.ustc.edu.cn/ubuntu-ports/ bionic main restricted universe multiverse  \n\ndeb https://mirrors.ustc.edu.cn/ubuntu-ports/ bionic-security main restricted universe multiverse\n\ndeb https://mirrors.ustc.edu.cn/ubuntu-ports/ bionic-updates main restricted universe multiverse\n\ndeb https://mirrors.ustc.edu.cn/ubuntu-ports/ bionic-backports main restricted universe multiverse\n```\n\n","tags":["N1","斐讯","ubuntu","可用源"]},{"title":"在浏览器收藏夹显示网站图标","url":"/2019/02/01/在浏览器地址栏显示网站图标/","content":"\n可在浏览器地址栏与收藏夹显示网站图标\n方法一：  \n制作一个16x16的icon图标，命名为favicon.ico，然后直接放在网站的根目录  \n方法二：  \n制作一个16x16的icon图标，命名为xx.ico（命名随意），放在根目录下。然后将下面的代码嵌入head区：\n![](https://raw.githubusercontent.com/a512154224/a512154224.github.io/master/picture/1004489023.jpg)\n\n```\n<link rel=\"icon\" href=\"/xx.ico\" type=\"image/x-icon\" />\n<link rel=\"shortcut icon\" href=\"/xx.ico\" type=\"image/x-icon\" />\n```\n刷新或清除缓存即可看到效果","tags":["网站图标","ico","HTML"]},{"title":"window10添加右键打开CMD","url":"/2019/01/20/window10添加右键打开CMD/","content":"\n把以下内容复制到新建文本add_cmd.reg文件里，双击运行即可：\n\n<pre><code class=\"language-css\">Windows Registry Editor Version 5.00\n\n[HKEY_LOCAL_MACHINESOFTWAREClassesDirectorybackgroundshellcmd_here]\n\n@=\"在此处打开命令行\"\n\"Icon\"=\"cmd.exe\"\n\n[HKEY_LOCAL_MACHINESOFTWAREClassesDirectorybackgroundshellcmd_herecommand]\n\n@=\"\"C:\\Windows\\System32\\cmd.exe\"\"\n\n[HKEY_LOCAL_MACHINESOFTWAREClassesFoldershellcmdPrompt]\n\n@=\"在此处打开命令行\"\n\n[HKEY_LOCAL_MACHINESOFTWAREClassesFoldershellcmdPromptcommand]\n\n@=\"\"C:\\Windows\\System32\\cmd.exe\" \"cd %1\"\"\n\n[HKEY_LOCAL_MACHINESOFTWAREClassesDirectoryshellcmd_here]\n\n@=\"在此处打开命令行\"\n\"Icon\"=\"cmd.exe\"\n\n[HKEY_LOCAL_MACHINESOFTWAREClassesDirectoryshellcmd_herecommand]\n\n@=\"\"C:\\Windows\\System32\\cmd.exe\"\"</code></pre>","tags":["命令","cmd","windows"]},{"title":"花生壳（公网版）移植到arm","url":"/2019/01/10/花生壳（公网版）移植到arm/","content":"\n1、安装必要的开发包\n<pre><code class=\"language-css\">[root@localhost~]#yum install gcc gcc-c++ autoconf automake  \n[root@localhost~]#tar zxvf gcc-linaro-7.3.1-2018.05-x86_64_aarch64-linux-gnu.tar.xz  \n[root@localhost~]#cd gcc-linaro-7.3.1-2018.05-x86_64_aarch64-linux-gnu/bin  \n[root@localhost~]#pwd  \n[root@localhost~]#vi /etc/profile  \n在结尾加上export PATH=$PATH:/root/gcc-linaro-7.3.1-2018.05-x86_64_aarch64-linux-gnu/bin（pwd得到的路径）  \n[root@localhost~]#source /etc/profile  \n[root@localhost~]#aarch64-linux-gnu-gcc -v</code></pre>\n没报错就OK了\n\n2、下载phddns-2.0.2.16556.tar.gz到某一个目录\n<pre><code class=\"language-css\">[root@localhost~]#wget http://download.oray.com/peanuthull/phddns-2.0.2.16556.tar.gz</code></pre>\n\n3、解压所有文件\n<pre><code class=\"language-css\">[root@localhost~]#tar zxvf phddns-2.0.2.16556.tar.gz</code></pre>\n\n4、进入目录并编译\n<pre><code class=\"language-css\">[root@localhost~]#cd phddns-2.0.2.16556  \n[root@localhostphddns-2.0.2.16556]#aclocal  \n[root@localhostphddns-2.0.2.16556]#autoconf  \n[root@localhostphddns-2.0.2.16556]#automake  \n[root@localhostphddns-2.0.2.16556]#./configure --host=i386-linux --target=aarch64-linux-gnu-gcc --build=aarch64-linux-gnu-gcc CXX=aarch64-linux-gnu-gcc CC=aarch64-linux-gnu-gcc LD= aarch64-linux-gnu-gcc-ld  \n[root@localhostphddns-2.0.2.16556]#make</code></pre>\n文件备用：[https://pan.baidu.com/s/1Vsjm8HJ_it_adAujOtb6jQ](https://pan.baidu.com/s/1Vsjm8HJ_it_adAujOtb6jQ \"phddns-2.0.2.16556.tar.gz\")","tags":["花生壳","oray","公网版","移植","arm"]},{"title":"ubuntu临时或永久修改hostname的方法","url":"/2019/01/08/ubuntu临时或永久修改hostname的方法/","content":"\n1、查看hostname\n<pre><code class=\"language-css\">hostname 或 uname -n</code></pre>\n2.1、临时修改hostname\n<pre><code class=\"language-css\">hostname new_hostname</code></pre>\n2.2、永久修改hostname\n<pre><code class=\"language-css\">vi /etc/hostname</code></pre>\n直接修改为new_hostname保存\n<pre><code class=\"language-css\">vi /etc/hosts</code></pre>\n修改以下即可：  \n<pre><code class=\"language-css\">127.0.0.1 localhost  \n127.0.1.1 new_hostname</code></pre>\n修改完成！","tags":["ubuntu","hostname"]},{"title":"centos7添加开机启动服务脚本","url":"/2019/01/05/centos7添加开机启动服务脚本/","content":"\n\n1、创建自启脚本\n<pre><code class=\"language-css\">vi autostart.sh </code></pre> \n内容开头：  \n<pre><code class=\"language-css\">#!/bin/bash  \nchkconfig: 2345 10 90   \ndescription: autostart.sh</code></pre>\n2、将脚本移动到/etc/rc.d/init.d目录下\n<pre><code class=\"language-css\">mv /opt/script/autostart.sh /etc/rc.d/init.d</code></pre>\n3、增加脚本的可执行权限\n<pre><code class=\"language-css\">chmod +x /etc/rc.d/init.d/autostart.sh</code></pre>\n4、添加脚本到开机自动启动项目中\n<pre><code class=\"language-css\">cd /etc/rc.d/init.d  \nchkconfig --add autostart.sh  \nchkconfig autostart.sh on</code></pre>\n大功告成！重启CENTOS7试试看呗~","tags":["自启","脚本","开机启动","centos","centos7","服务"]}]